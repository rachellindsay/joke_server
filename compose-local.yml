version: "3"
services:
  frontend:
    image: nginx:1.23-alpine-slim
    depends_on:
      - backend
      - stats
    ports:
      - "3000:80"
    volumes:
      - ./docker_containers/frontend/conf-local/:/etc/nginx/conf.d/:ro
      # - ./docker_containers/certbot/www:/var/www/certbot/:ro
      # - ./docker_containers/certbot/conf/:/etc/nginx/ssl/:ro
      - ./docker_containers/frontend/vue/dist/:/usr/share/nginx/public/vue/:ro
      - ./docker_containers/frontend/react_joke/build/:/usr/share/nginx/public/react_joke/:ro
      - ./docker_containers/frontend/homepage/:/usr/share/nginx/public/homepage/:ro

  backend:
    build:
      context: ./docker_containers/backend
      dockerfile: ./Dockerfile
    depends_on:
      db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    expose:
      - "5000"
    ports:
      - "5000:5000"

  adminer:
    image: adminer
    container_name: adminer
    environment:
      ADMINER_DEFAULT_SERVER: db
    expose:
      - "8080"
    ports:
      - "8080:8080"
    links:
      - db

  db:
    build:
      context: ./docker_containers/db
    ports:
      - "5555:3306"
    environment:
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}

    command: mysqld --datadir=/internal/db_storage
    volumes:
      - ./docker_containers/db/db_storage:/internal/db_storage

  stats:
    stdin_open: true
    tty: true
    build:
      context: ./docker_containers/stats
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    ports:
      - "4000:4000"

  email:
    stdin_open: true
    tty: true
    build:
      context: ./docker_containers/email
    environment:
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
    depends_on:
      rabbitmq:
        condition: service_healthy

  # flask:
  #   stdin_open: true
  #   tty: true
  #   build:
  #     context: ./docker_containers/flask
  #   depends_on:
  #     db:
  #       condition: service_started
  #   ports:
  #     - "4000:4000"

  rabbitmq:
    build:
      context: ./docker_containers/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 30s
      retries: 10
    ports:
      - "15672:15672"
