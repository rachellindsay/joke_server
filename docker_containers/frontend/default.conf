# notes from this tutorial: https://phoenixnap.com/kb/letsencrypt-docker
# allow Certbot access to the files it needs
server {
  listen    80;
  listen [::]:80;
  server_name rachellindsay.net www.rachellindsay.net;

  # serves the files necessary for Certbot to authenticate the server and create the certificate
  location /.well-known/acme-challenge/ {
     root /var/www/certbot;
  }
  
  # sends the rest of the port 80 HTTP traffic to HTTPS
  location / {
    return 301 https://rachellindsay.net$request_uri
  }  
}

# With the abover configuration in place, but without the below HTTPS / port 443 configuration, run:
#    docker-compose run --rm certbot certonly --webroot --webroot-path /var/www/certbot/ --dry-run -d rachellindsay.net
# this is run as a "dry run" because Let's Encrypt limits the number of available free certificates each month so it will not waste them.
# will prompt for email to receive notices from Let's Encrypt (optional)
# agree to terms of service
# if no errors, then run without the "dry run" command
# Once certbot authenticates the server add the below HTTPS server block to the config file
# Once these are added/uncommented, to reload nginx run: docker compose restart
# 

# server {
#   listen 443 ssl;
#   listen [::]:443 ssl;

#   server_name rachellindsay.net

#   ssl_certificate /etc/nginx/ssl/live/rachellindsay.net/fullchain.pem;
#   ssl_certificate_key /etc/nginx/ssl/live/rachellindsay.net/privkey.pem;
 
#   location / {
#     proxy_pass http://rachellindsay.net;
#   }
  
    # these location blocks were originally in the port 80 server block but I moved them here as it seems like they should be part of the post redirect page.

#   location / {
#     root /usr/share/nginx/public;
#     index index.html

#     try_files $uri $uri/ =404;
#   }

#   location /backend {
#     proxy_set_header Host $host;
#     proxy_set_header X-Real_IP $remote_addr;
#     proxy_pass http://backend:5000;
#   }

# }